<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/10/29/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>HelloWorld</category>
      </categories>
      <tags>
        <tag>HelloWorld</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx编译安装</title>
    <url>/2022/03/20/Nginx%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="检查安装环境"><a href="#检查安装环境" class="headerlink" title="检查安装环境"></a>检查安装环境</h1><ul>
<li><p>我们在安装不同的工具软件的时候，需要安装插件的环境关系</p>
<p>​        检查系统版本：<code>cat /etc/redhat-release</code></p>
<p>​        查看是否已安装<code>wget: rpm -qa|wget</code></p>
<p>​        (注： Linux系统中的wget是一个下载文件的工具)</p>
</li>
<li><p>​    否则（结果显示空白）安装：<code>yum -y install wget</code></p>
<p>​        安装g编译器：默认的云服务器都是会安装的。</p>
<p>​        查看是否已安装编译器：<code>rpm -qa|gcc</code></p>
<p>​        否则（结果显示空白）安装：<code>yum -y install gcc gcc-c++</code></p>
</li>
<li><p>为什么要装gcc编译器？</p>
<p>​    gcc是c语言编译器<br>​    而我们的nginx的编码语言就是c语言</p>
<p>​    使用gcc编译器可以编译语言代码为可执行程序</p>
</li>
</ul>
<h1 id="安装-nginx依赖"><a href="#安装-nginx依赖" class="headerlink" title="安装 nginx依赖"></a>安装 nginx依赖</h1><ol>
<li><p>nginx的Rewrite模块和HTTP核心模块会使用到PRE正则表达式语法</p>
<p>yum -y install pcre pcre-devel</p>
</li>
<li><p>nginx的各种模块中需要使用gzip压缩：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install zlib zlib-devel</span><br></pre></td></tr></table></figure></li>
<li><p>安全套接字层密码库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install openssl openssI-devel</span><br></pre></td></tr></table></figure>

<h2 id="全部依赖："><a href="#全部依赖：" class="headerlink" title="全部依赖："></a>全部依赖：</h2></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install gcc gcc-c++ make unzip pcre pcre-devel zlib zlib-devel libxml2 libxml2-devel  readline readline-devel ncurses ncurses-devel perl-devel perl-ExtUtils-Embed openssl-devel -y</span><br></pre></td></tr></table></figure>

<h1 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h1><ol>
<li>下载 nginx</li>
</ol>
<p>​    wget <a href="http://nginx.org/download/nginx-1.14.0.tar.gz">http://nginx.org/download/nginx-1.14.0.tar.gz</a> 或者下载好直接上传</p>
<p>​    解压：<code>tar-zxvf nginx-1.14.0.tar.gz</code></p>
<ol start="2">
<li>解压nginx</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd nginx-1.14.0</span><br></pre></td></tr></table></figure>

<p><img src="https://github.com/weiqh2000/blogImages/blob/main/20220320122137.png?raw=true" alt="20220320122137.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/usr/local/src/nginx --with-http_ssl_module --with-http_stub_status_module --with-pcre --with-http_spdy_module</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">参数说明：</span><br><span class="line">编译选项官方提供的有：</span><br><span class="line">–prefix=path 定义一个目录来保存你的nginx的提供功能的文件夹，就这好比我们安装软件的时候软件存放的目录，如果我们在编译的不指定安装位置，那么默认的位置/usr/local/nginx 目录</span><br><span class="line">–sbin-path=path 设置nginx执行脚本的位置，这里如果设置在path变量里面，就可以在bash环境下，任意使用nginx命令，默认位置prefix/sbin/nginx 注意这里的prefix是</span><br><span class="line">在配置文件里面配置的路径</span><br><span class="line">–conf-path=path 配置nginx配置文件的路径，如果不指定这个选项，那么配置文件的默认路径就会是 prefix/conf/nginx.conf</span><br><span class="line">–pid-path =path 配置nginx.pid file的路径，一般来说，进程在运行的时候的时候有一个进程id，这个id会保存在pid file里面，默认的pid file的放置位置是prefix/logs/nginx.pid</span><br><span class="line">–error-log-path=path 设置错误日志的存放路径，如果不指定，就默认 prefix/logs/error.log</span><br><span class="line">–http-log-path= path 设置http访问日志的路径，如果不指定，就默认 prefix/logs/access.log</span><br><span class="line">–user=name 设置默认启动进程的用户，如果不指定，就默认 nobody</span><br><span class="line">–group=name 设置这个用户所在的用户组，如果不指定，依然是nobody</span><br><span class="line">这些是我们常用的编译选项，其他的可以均保持默认，如需特殊指定，可上nginx官网查阅 http://nginx.org/en/docs/configure.html</span><br><span class="line">下面是一些不常用的选项</span><br><span class="line">–with-http_ssl_module -开启HTTP SSL模块，使NGINX可以支持HTTPS请求。需要安装了OPENSSL</span><br><span class="line">–with-http_flv_module</span><br><span class="line">–with-http_stub_status_module - 启用 “server status” 页(可有可无)</span><br><span class="line">–without-http_gzip_module - 禁用 ngx_http_gzip_module. 如果启用，需要 zlib 。</span><br><span class="line">–without-http_ssi_module - 禁用 ngx_http_ssi_module</span><br><span class="line">–without-http_referer_module - 禁用 ngx_http_referer_module</span><br><span class="line">–without-http_rewrite_module - 禁用 ngx_http_rewrite_module. 如果启用需要 PCRE 。</span><br><span class="line">–without-http_proxy_module - 禁用 ngx_http_proxy_module</span><br><span class="line">–without-http_fastcgi_module - 禁用 ngx_http_fastcgi_module</span><br><span class="line">–without-http_memcached_module - 禁用 ngx_http_memcached_module</span><br><span class="line">–without-http_browser_module - 禁用 ngx_http_browser_module</span><br><span class="line">–http-proxy-temp-path=PATH - Set path to the http proxy temporary files</span><br><span class="line">–http-fastcgi-temp-path=PATH - Set path to the http fastcgi temporary files</span><br><span class="line">–without-http - 禁用 HTTP server（用作代理或反向代理）</span><br><span class="line">–with-mail - 启用 IMAP4/POP3/SMTP 代理模块</span><br><span class="line">–with-mail_ssl_module - 启用 ngx_mail_ssl_module</span><br><span class="line">–with-openssl=DIR - Set path to OpenSSL library sources</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>编译并安装</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<ol start="4">
<li><p>创建并设置 nginx运行账号（本章节是为了提高服务器的访问权限控制——可跳过，不影响个人使用）</p>
<p>group add nginx</p>
<p>user add -M -g nginx -s /sbin/nologin nginx（手动创建一个用户，不想让用户登录系统）</p>
<p>cd /usr/local/src/nginx/config</p>
<p>(注: M：不要自动建立用户的登入目录。)</p>
<p>s是指定用户登入后所使用的she11。默认值为/bin/bash。如果不想让用户登录系统可以用-s /sbin/nologin此用户就不可以登录系统</p>
</li>
<li><p>设置 nginx为系统服务</p>
</li>
</ol>
<pre><code>  在文件夹/lib/systemd/system新建文件 nginx.service

  文件创建：touch nginx.service

  vim /lib/systemd/system/nginx.service
</code></pre>
<p>   写入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=nginx</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/local/src/nginx/sbin/nginx</span><br><span class="line">ExecReload=/usr/local/src/nginx/sbin/nginx -s reload</span><br><span class="line">ExecStop=/usr/local/src/nginx/sbin/nginx -s stop</span><br><span class="line">PrivateTmp=true</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<ol start="6">
<li><p>启动nginx</p>
<p>systemctl start nginx</p>
<p>如果出现</p>
<p><img src="https://github.com/weiqh2000/blogImages/blob/main/20220320124604.png?raw=true" alt="20220320124604.png"></p>
<p>那么输入</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>

<p>再重新启动nginx即可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure>

<h1 id="nginx的config文件语法高亮"><a href="#nginx的config文件语法高亮" class="headerlink" title="nginx的config文件语法高亮"></a>nginx的config文件语法高亮</h1><ol>
<li>进入nginx的源码文件</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/src/nginx-1.18.0/contrib/vim/syntax</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>将该文件夹下的nginx.vim复制到<del>/.vim/syntax/文件夹下，并且在</del>/.vim/filetype.vim文件中</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &quot;au BufRead,BufNewFile /usr/local/src/nginx/conf/* set ft=nginx&quot; &gt;&gt; /root/.vim/filetype.vim</span><br></pre></td></tr></table></figure>

<h1 id="额外内容"><a href="#额外内容" class="headerlink" title="额外内容"></a>额外内容</h1><p><a href="https://xinx.top/archives/45.html">https://xinx.top/archives/45.html</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install kernel-headers</span><br></pre></td></tr></table></figure>

<p>Nginx官网 启动脚本</p>
<p><a href="https://www.nginx.com/resources/wiki/start/topics/examples/redhatnginxinit/">https://www.nginx.com/resources/wiki/start/topics/examples/redhatnginxinit/</a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>vps</category>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
        <tag>vps</tag>
      </tags>
  </entry>
  <entry>
    <title>vps一键DD</title>
    <url>/2022/03/19/vps%E4%B8%80%E9%94%AEdd%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h4 id="tips"><a href="#tips" class="headerlink" title="tips:"></a>tips:</h4><p>​    腾讯云自带的一些组件，会阻止我们DD安装操作系统（安装过程会报错，无法正确写入进磁盘），所以在DD安装操作系统前，必须要禁用、删除掉这些组件.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop tat_agent</span><br><span class="line">systemctl disable tat_agent</span><br><span class="line">rm -rf /etc/systemd/system/tat_agent.service</span><br><span class="line">rm -fr /usr/local/qcloud </span><br><span class="line"> </span><br><span class="line">ps -A | grep agent</span><br><span class="line"># 检查看是否还有腾讯云组件</span><br><span class="line"># kill 这个进程</span><br></pre></td></tr></table></figure>

<p>​    所有腾讯云组件都删除后，就可以DD安装Linux/Windows了.    </p>
<p>​    在使用 Centos 系统中使用 DD脚本，出现该错误</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Press any key to continue...Error! Not Found grub.</span><br></pre></td></tr></table></figure>

<p>​    Centos下的 grub 是在 /boot 下的 grub2 目录下 所以无法安装成功，重装切换到 Ubuntu 系统就不会出现该错误</p>
<p>​    腾讯云请先切换 Ubuntu 的镜像源至中科大镜像源，使用默认镜像源会导致下载缓慢</p>
<ul>
<li><h3 id="安装脚本所需的组件"><a href="#安装脚本所需的组件" class="headerlink" title="安装脚本所需的组件"></a>安装脚本所需的组件</h3></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">Debian/Ubuntu</span></span><br><span class="line"></span><br><span class="line"> apt-get install -y xz-utils openssl gawk file curl wget </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">RedHat/CentOS</span></span><br><span class="line"></span><br><span class="line">yum install -y xz openssl gawk file curl wget</span><br></pre></td></tr></table></figure>

<ul>
<li><h3 id="使用CDN下载脚本"><a href="#使用CDN下载脚本" class="headerlink" title="使用CDN下载脚本"></a>使用CDN下载脚本</h3></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://cdn.jsdelivr.net/gh/hiCasper/Shell@master/AutoReinstall.sh &amp;&amp; chmod +x AutoReinstall.sh &amp;&amp; bash AutoReinstall.sh</span><br></pre></td></tr></table></figure>

<ul>
<li><h4 id="选择系统"><a href="#选择系统" class="headerlink" title="选择系统"></a>选择系统</h4></li>
</ul>
<p><img src="https://github.com/weiqh2000/blogImages/blob/main/Snipaste_2022-03-19_15-41-16.jpg?raw=true" alt="Snipaste_2022-03-19_15-41-16.jpg"></p>
<p>​    运行到这步，控制台会断开连接，之后需要到腾讯云使用VNC连接配置</p>
<p><img src="https://github.com/weiqh2000/blogImages/blob/main/Snipaste_2022-03-19_15-47-38.jpg?raw=true" alt="Snipaste_2022-03-19_15-47-38.jpg"></p>
<p><img src="https://github.com/weiqh2000/blogImages/blob/main/Snipaste_2022-03-19_15-50-52.jpg?raw=true" alt="Snipaste_2022-03-19_15-50-52.jpg"></p>
<p>​    一路 Continue就好</p>
<p><img src="https://github.com/weiqh2000/blogImages/blob/main/Snipaste_2022-03-19_15-53-03.jpg?raw=true" alt="Snipaste_2022-03-19_15-53-03.jpg"></p>
<p>Centos </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">账号：root</span><br><span class="line">默认密码：Pwd@CentOS</span><br></pre></td></tr></table></figure>

<p>其他Liunx系统</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">账号：root</span><br><span class="line">默认密码：Pwd@Linux</span><br></pre></td></tr></table></figure>









<p>资料来源：</p>
<p><a href="https://www.2331314.xyz/295.html">https://www.2331314.xyz/295.html</a></p>
<p><a href="https://www.xugo.xyz/index.php/2021/12/11/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%9B%BD%E5%86%85%E8%BD%BB%E9%87%8F-dd-%E7%B3%BB%E7%BB%9F/">https://www.xugo.xyz/index.php/2021/12/11/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%9B%BD%E5%86%85%E8%BD%BB%E9%87%8F-dd-%E7%B3%BB%E7%BB%9F/</a></p>
]]></content>
      <categories>
        <category>vps</category>
      </categories>
      <tags>
        <tag>vps</tag>
      </tags>
  </entry>
  <entry>
    <title>myTest</title>
    <url>/2021/12/11/myTest/</url>
    <content><![CDATA[<p>My first test article.</p>
]]></content>
      <categories>
        <category>HelloWorld</category>
      </categories>
      <tags>
        <tag>HelloWorld</tag>
      </tags>
  </entry>
</search>
